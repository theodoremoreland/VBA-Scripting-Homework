Sub stocks()
     'creates and sizes array to store tickers.
     '...because the number of used cells in column:1 far exceeds the number of tickers...
     '...the size argument will create a lot of elements that never get assigned values...
     '...the elements without values must later be bypassed and ignored to prevent breaking code (see third for loop)
     Dim tickers(), size As Long, i As Long
     size = WorksheetFunction.CountA(Worksheets("Test").Columns(1))
     ReDim tickers(size)
     arrNum = UBound(tickers)
     
     'variables used in various loops throughout this macro
     
     Dim index As Long
     Dim index2 As Long
     Dim k As Long
     no_value = False
     
    
     ' will loop through each row in cloumn "A" until the loop lands on a cell without a value
     ' so long as the cell does have a value, this procedure will compare the current cell value to the last cell value
     ' if the current cell value is not the same as the previous cell value, the procedure will add the current cell value
     ' to the tickers' array. Then the procedure will increment the index variable + 1.
     While no_value = False
            ' conditional to ensure index starts at 0 before incrementing.
            If index > 0 Then
                index = index
            Else
                index = 0
            End If
            ' conditional to ensure i starts at 2 before incrementing.
            If i < 2 Then
                i = 2
            Else
                i = i + 1
            End If
            ' the variables "cell_a" and "cell_b" are being used as a replacement for the the function "Cells(i, a).Value"...
            ' ...because I can't get the function "Cells().Value" to work properly
            cell_a = "a" + CStr(i)
            cell_b = "a" + CStr(i - 1)
            
            If IsEmpty(Range(cell_a)) Then
                no_value = True
            ElseIf Range(cell_a).Value <> Range(cell_b).Value Then
                tickers(index) = Range(cell_a).Value
                index = index + 1
            End If
     Wend
     
     'will loop through tickers' array then insert each element into column:"I".
     '"j" is the increment for each row and "k" increments through the tickers' array.
     For j = 2 To size
            If k > 0 Then
                k = k
            Else
                k = 0
            End If
            
            cell_i = "i" + CStr(j)
            Range(cell_i).Value = tickers(k)
            k = k + 1
     Next j
     

     'loop once for every element in the tickers' array
     For index2 = 0 To arrNum
        'once the tickers' index reach an empty element, exit the for loop
        If IsEmpty(tickers(index2)) Then Exit For
        opening = 0
        closing = 0
        volume = 0
        cell_j = "j" + CStr(index2 + 2) 'yearly change
        cell_k = "k" + CStr(index2 + 2) 'percent change
        cell_L = "l" + CStr(index2 + 2) 'total volume
        'loop once for every row in columns a,c, f, and g.
        For index3 = 2 To size - 1
            cell_a = "a" + CStr(index3) 'ticker
            cell_c = "c" + CStr(index3) 'opening
            cell_f = "f" + CStr(index3) 'closing
            cell_g = "g" + CStr(index3) 'volume
            'if the ticker in (column:a, row:index3) is the same as the current ticker found in the tickers' array...
            '...add the values of (column:c, row:index3) to the opening variable...
            '...add the values of (column:f, row:index3) to the closing variable...
            '...add the values of (column:g, row:index3) to the volume variable...
            If Range(cell_a).Value = tickers(index2) Then
                opening = opening + Range(cell_c).Value
                closing = closing + Range(cell_f).Value
                volume = volume + Range(cell_g).Value
            End If
        'continue looping until loop evaluates all rows per specified columns in the worksheet
        Next index3
        'once completing a loop through all rows, subtract opening from closing to find yearly stock increase...
        '...assigns yearly stock increase to cell:j and volume to cell:L
        Range(cell_j).Value = closing - opening
        Range(cell_L).Value = volume
        increase = closing - opening
        percent_increase = increase / opening * 100
        Range(cell_k).Value = FormatPercent(percent_increase)
    'continue looping until looping through every element in tickers' array unless finding an empty element, in which case: exit
    Next index2
    
    
    size2 = WorksheetFunction.CountA(Worksheets("Test").Columns("i")) 'size of new ticker column
    max_per = WorksheetFunction.Max(Worksheets("Test").Columns("k"))
    min_per = WorksheetFunction.Min(Worksheets("Test").Columns("k"))
    max_vol = WorksheetFunction.Max(Worksheets("Test").Columns("l"))
    
    Range("Q2").Value = FormatPercent(max_per)
    Range("Q3").Value = FormatPercent(min_per)
    Range("Q4").Value = max_vol
    
    'loops through columns i,k, and l. If either column k or l contains min or max values, apply ticker to appropriate cell
    For index4 = 2 To size2 + 2
        aticker = "i" + CStr(index4) 'ticker
        ck = "k" + CStr(index4) 'percent change
        cl = "l" + CStr(index4) 'volume
        If max_per = Range(ck).Value Then
            Range("P2").Value = Range(aticker).Value
        ElseIf min_per = Range(ck).Value Then
            Range("P3").Value = Range(aticker).Value
        ElseIf max_vol = Range(cl).Value Then
            Range("P4").Value = Range(aticker).Value
        End If
    Next index4
    
    'loops through "yearly change" column then applies either green or red interior
    For index5 = 2 To arrNum + 2
        cj = "j" + CStr(index5)
        If IsEmpty(Range(cj).Value) Then Exit For
        If Range(cj).Value > 0 Then
            Range(cj).Interior.ColorIndex = 4
        Else
            Range(cj).Interior.ColorIndex = 3
        End If
    Next index5

End Sub
